{"version":3,"sources":["components/listItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","correctInput","target","onClick","deleteItems","icon","duration","easing","library","add","faTrash","App","state","listOfItems","currentItem","inputHandler","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","ItemsForDelete","filter","correctlistOfItems","correctlistOfItem","onSubmit","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAMe,SAASA,EAAUC,GAChC,IACMC,EADQD,EAAME,MACIC,KAAI,SAACC,GAC3B,OACE,qBAAKC,UAAU,OAAf,SACE,8BACE,uBACEC,KAAK,OACLC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SAAU,SAACC,GAAD,OAAOZ,EAAMa,aAAaD,EAAEE,OAAOL,MAAOL,EAAKI,QAG3D,+BACE,cAAC,IAAD,CACEO,QAAS,kBAAMf,EAAMgB,YAAYZ,EAAKI,MACtCH,UAAU,SACVY,KAAK,gBAbcb,EAAKI,QAoBpC,OACE,8BACE,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACGlB,MC7BTmB,IAAQC,IAAIC,K,IAESC,E,kDACnB,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACXC,YAAa,GACbC,YAAa,CACXhB,KAAM,GACNF,IAAK,KAGT,EAAKmB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKZ,YAAc,EAAKA,YAAYY,KAAjB,gBACnB,EAAKf,aAAe,EAAKA,aAAae,KAAlB,gBAZH,E,gDAenB,SAAahB,GACXkB,KAAKC,SAAS,CACZL,YAAa,CACXhB,KAAME,EAAEE,OAAOL,MACfD,IAAKwB,KAAKC,W,qBAKhB,SAAQrB,GACNA,EAAEsB,iBACF,IAAMC,EAAUL,KAAKN,MAAME,YAE3B,GADAU,QAAQC,IAAIF,GACI,KAAZA,EAAgB,CAClB,IAAMG,EAAQ,sBAAOR,KAAKN,MAAMC,aAAlB,CAA+BU,IAE7CL,KAAKC,SAAS,CACZN,YAAaa,EACbZ,YAAa,CACXhB,KAAM,GACNF,IAAK,S,yBAMb,SAAYA,GACV,IAAM+B,EAAiBT,KAAKN,MAAMC,YAAYe,QAC5C,SAACpC,GAAD,OAAUA,EAAKI,MAAQA,KAEzBsB,KAAKC,SAAS,CAAEN,YAAac,M,0BAE/B,SAAa7B,EAAMF,GACjB,IAAMiC,EAAqBX,KAAKN,MAAMC,YAEtCgB,EAAmBtC,KAAI,SAACuC,GAClBA,EAAkBlC,MAAQA,IAC5BkC,EAAkBhC,KAAOA,MAG7BoB,KAAKC,SAAS,CACZN,YAAagB,M,oBAIjB,WACE,IAAQf,EAAgBI,KAAKN,MAArBE,YACR,OACE,sBAAKrB,UAAU,MAAf,UACE,iCACE,uBAAMsC,SAAUb,KAAKD,QAArB,UACE,uBACEvB,KAAK,OACLsC,YAAY,aACZnC,MAAOiB,EAAYhB,KACnBC,SAAUmB,KAAKH,eAEjB,wBAAQrB,KAAK,SAAb,2BAGJ,cAACP,EAAD,CACEc,aAAciB,KAAKjB,aACnBG,YAAac,KAAKd,YAClBd,MAAO4B,KAAKN,MAAMC,qB,GA/EKoB,aCMlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63aab11f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move'\r\n\r\nimport './listItem.css'\r\n\r\nexport default function ListItems(props) {\r\n  const items = props.items\r\n  const listItems = items.map((item) => {\r\n    return (\r\n      <div className=\"list\" key={item.key}>\r\n        <p>\r\n          <input\r\n            type=\"text\"\r\n            id={item.key}\r\n            value={item.text}\r\n            onChange={(e) => props.correctInput(e.target.value, item.key)}\r\n          />\r\n\r\n          <span>\r\n            <FontAwesomeIcon\r\n              onClick={() => props.deleteItems(item.key)}\r\n              className=\"faicon\"\r\n              icon=\"trash\"\r\n            />\r\n          </span>\r\n        </p>\r\n      </div>\r\n    )\r\n  })\r\n  return (\r\n    <div>\r\n      <FlipMove duration={500} easing=\"ease-in-out\">\r\n        {listItems}\r\n      </FlipMove>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport ListItems from './components/listItems'\nlibrary.add(faTrash)\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      listOfItems: [],\n      currentItem: {\n        text: '',\n        key: '',\n      },\n    }\n    this.inputHandler = this.inputHandler.bind(this)\n    this.addItem = this.addItem.bind(this)\n    this.deleteItems = this.deleteItems.bind(this)\n    this.correctInput = this.correctInput.bind(this)\n  }\n\n  inputHandler(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now(),\n      },\n    })\n  }\n\n  addItem(e) {\n    e.preventDefault()\n    const newItem = this.state.currentItem\n    console.log(newItem)\n    if (newItem !== '') {\n      const newItems = [...this.state.listOfItems, newItem]\n\n      this.setState({\n        listOfItems: newItems,\n        currentItem: {\n          text: '',\n          key: '',\n        },\n      })\n    }\n  }\n\n  deleteItems(key) {\n    const ItemsForDelete = this.state.listOfItems.filter(\n      (item) => item.key !== key\n    )\n    this.setState({ listOfItems: ItemsForDelete })\n  }\n  correctInput(text, key) {\n    const correctlistOfItems = this.state.listOfItems\n    // eslint-disable-next-line\n    correctlistOfItems.map((correctlistOfItem) => {\n      if (correctlistOfItem.key === key) {\n        correctlistOfItem.text = text\n      }\n    })\n    this.setState({\n      listOfItems: correctlistOfItems,\n    })\n  }\n\n  render() {\n    const { currentItem } = this.state\n    return (\n      <div className=\"App\">\n        <header>\n          <form onSubmit={this.addItem}>\n            <input\n              type=\"text\"\n              placeholder=\"Add a todo\"\n              value={currentItem.text}\n              onChange={this.inputHandler}\n            />\n            <button type=\"submit\">Add todo</button>\n          </form>\n        </header>\n        <ListItems\n          correctInput={this.correctInput}\n          deleteItems={this.deleteItems}\n          items={this.state.listOfItems}\n        />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}